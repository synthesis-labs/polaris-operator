/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/synthesis-labs/polaris-operator/pkg/apis/polaris/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PolarisBuildStepLister helps list PolarisBuildSteps.
type PolarisBuildStepLister interface {
	// List lists all PolarisBuildSteps in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PolarisBuildStep, err error)
	// PolarisBuildSteps returns an object that can list and get PolarisBuildSteps.
	PolarisBuildSteps(namespace string) PolarisBuildStepNamespaceLister
	PolarisBuildStepListerExpansion
}

// polarisBuildStepLister implements the PolarisBuildStepLister interface.
type polarisBuildStepLister struct {
	indexer cache.Indexer
}

// NewPolarisBuildStepLister returns a new PolarisBuildStepLister.
func NewPolarisBuildStepLister(indexer cache.Indexer) PolarisBuildStepLister {
	return &polarisBuildStepLister{indexer: indexer}
}

// List lists all PolarisBuildSteps in the indexer.
func (s *polarisBuildStepLister) List(selector labels.Selector) (ret []*v1alpha1.PolarisBuildStep, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PolarisBuildStep))
	})
	return ret, err
}

// PolarisBuildSteps returns an object that can list and get PolarisBuildSteps.
func (s *polarisBuildStepLister) PolarisBuildSteps(namespace string) PolarisBuildStepNamespaceLister {
	return polarisBuildStepNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PolarisBuildStepNamespaceLister helps list and get PolarisBuildSteps.
type PolarisBuildStepNamespaceLister interface {
	// List lists all PolarisBuildSteps in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PolarisBuildStep, err error)
	// Get retrieves the PolarisBuildStep from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PolarisBuildStep, error)
	PolarisBuildStepNamespaceListerExpansion
}

// polarisBuildStepNamespaceLister implements the PolarisBuildStepNamespaceLister
// interface.
type polarisBuildStepNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PolarisBuildSteps in the indexer for a given namespace.
func (s polarisBuildStepNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PolarisBuildStep, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PolarisBuildStep))
	})
	return ret, err
}

// Get retrieves the PolarisBuildStep from the indexer for a given namespace and name.
func (s polarisBuildStepNamespaceLister) Get(name string) (*v1alpha1.PolarisBuildStep, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("polarisbuildstep"), name)
	}
	return obj.(*v1alpha1.PolarisBuildStep), nil
}
