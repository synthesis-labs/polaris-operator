/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/synthesis-labs/polaris-operator/pkg/apis/polaris/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PolarisBuildPipelineLister helps list PolarisBuildPipelines.
type PolarisBuildPipelineLister interface {
	// List lists all PolarisBuildPipelines in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PolarisBuildPipeline, err error)
	// PolarisBuildPipelines returns an object that can list and get PolarisBuildPipelines.
	PolarisBuildPipelines(namespace string) PolarisBuildPipelineNamespaceLister
	PolarisBuildPipelineListerExpansion
}

// polarisBuildPipelineLister implements the PolarisBuildPipelineLister interface.
type polarisBuildPipelineLister struct {
	indexer cache.Indexer
}

// NewPolarisBuildPipelineLister returns a new PolarisBuildPipelineLister.
func NewPolarisBuildPipelineLister(indexer cache.Indexer) PolarisBuildPipelineLister {
	return &polarisBuildPipelineLister{indexer: indexer}
}

// List lists all PolarisBuildPipelines in the indexer.
func (s *polarisBuildPipelineLister) List(selector labels.Selector) (ret []*v1alpha1.PolarisBuildPipeline, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PolarisBuildPipeline))
	})
	return ret, err
}

// PolarisBuildPipelines returns an object that can list and get PolarisBuildPipelines.
func (s *polarisBuildPipelineLister) PolarisBuildPipelines(namespace string) PolarisBuildPipelineNamespaceLister {
	return polarisBuildPipelineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PolarisBuildPipelineNamespaceLister helps list and get PolarisBuildPipelines.
type PolarisBuildPipelineNamespaceLister interface {
	// List lists all PolarisBuildPipelines in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PolarisBuildPipeline, err error)
	// Get retrieves the PolarisBuildPipeline from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PolarisBuildPipeline, error)
	PolarisBuildPipelineNamespaceListerExpansion
}

// polarisBuildPipelineNamespaceLister implements the PolarisBuildPipelineNamespaceLister
// interface.
type polarisBuildPipelineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PolarisBuildPipelines in the indexer for a given namespace.
func (s polarisBuildPipelineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PolarisBuildPipeline, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PolarisBuildPipeline))
	})
	return ret, err
}

// Get retrieves the PolarisBuildPipeline from the indexer for a given namespace and name.
func (s polarisBuildPipelineNamespaceLister) Get(name string) (*v1alpha1.PolarisBuildPipeline, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("polarisbuildpipeline"), name)
	}
	return obj.(*v1alpha1.PolarisBuildPipeline), nil
}
